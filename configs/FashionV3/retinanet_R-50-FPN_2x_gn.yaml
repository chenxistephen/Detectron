MODEL:
  TYPE: retinanet
  CONV_BODY: FPN.add_fpn_ResNet50_conv5_body
  NUM_CLASSES: 111 #167 #59
NUM_GPUS: 8
SOLVER:
  WEIGHT_DECAY: 0.0001
  LR_POLICY: steps_with_decay
  BASE_LR: 0.01
  GAMMA: 0.1
  MAX_ITER: 180000
  STEPS: [0, 120000, 160000]
FPN:
  FPN_ON: True
  MULTILEVEL_RPN: True
  RPN_MAX_LEVEL: 7
  RPN_MIN_LEVEL: 3
  COARSEST_STRIDE: 128
  EXTRA_CONV_LEVELS: True
  USE_GN: True  # Note: use GN on the FPN-specific layers
RESNETS:
  STRIDE_1X1: False  # default True for MSRA; False for C2 or Torch models
  TRANS_FUNC: bottleneck_gn_transformation  # Note: this is a GN bottleneck transform
  STEM_FUNC: basic_gn_stem  # Note: this is a GN stem
  SHORTCUT_FUNC: basic_gn_shortcut  # Note: this is a GN shortcut
RETINANET:
  RETINANET_ON: True
  NUM_CONVS: 4
  ASPECT_RATIOS: (1.0, 2.0, 0.5)
  SCALES_PER_OCTAVE: 3
  ANCHOR_SCALE: 4
  LOSS_GAMMA: 2.0
  LOSS_ALPHA: 0.25
TRAIN:
  WEIGHTS: https://dl.fbaipublicfiles.com/detectron/ImageNetPretrained/47261647/R-50-GN.pkl  # Note: a GN pre-trained model
  DATASETS: ('Fashion_VI_train', )
  SCALES: (600,)
  MAX_SIZE: 1000 #1333
  RPN_STRADDLE_THRESH: -1  # default 0
  AUTO_RESUME: True
TEST:
  DATASETS: ('FashionV2_val',)
  SCALE: 400
  MAX_SIZE: 667
  NMS: 0.5
  RPN_PRE_NMS_TOP_N: 10000  # Per FPN level
  RPN_POST_NMS_TOP_N: 2000
  FORCE_JSON_DATASET_EVAL: True
OUTPUT_DIR: .
